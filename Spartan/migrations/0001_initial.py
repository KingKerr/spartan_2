# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-07-06 03:03
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('breakfast', models.CharField(help_text='Fruit and Oatmeal, Bacon & Eggs, Smoothie', max_length=30)),
                ('lunch', models.CharField(help_text='Tuna Fish, Shrimp Salad, Chicken & Rice', max_length=30)),
                ('dinner', models.CharField(help_text='Steak & Baked Potato, Spaghetti & Meatballs, Red Beans & Rice', max_length=30)),
                ('daily_caloric_intake', models.IntegerField(null=True)),
                ('goal', models.CharField(help_text='Increase Protein, Eat less starch, Eat more vegetables', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Workout',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upper_body', models.CharField(help_text='ex: Bench Press, Shoulder Press, Shrugs', max_length=30)),
                ('lower_body', models.CharField(help_text='Squats, Lunges, Deadlifts', max_length=30)),
                ('explosive', models.CharField(help_text='Hang Cleans, Box Jumps, Hang Snatch', max_length=30)),
                ('cardio', models.CharField(help_text='Jogging, Cycling, 110s', max_length=30)),
                ('speed', models.CharField(help_text='Sprints, 10 yard starts, Speed Sled', max_length=30)),
                ('skill', models.CharField(help_text='Boxing, Jump Shooting, Route Running', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.')], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('favorite_fitness_hobby', models.CharField(help_text='Basketball, Yoga, Dancing', max_length=50)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='user_profile')),
                ('goal', models.CharField(help_text='Increase Lean Muscle, Lower Bodyfat, Improve Strength', max_length=30)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='workout',
            name='athlete',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='athlete', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='meal',
            name='daily_nutrition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_meals', to=settings.AUTH_USER_MODEL),
        ),
    ]
